name: Full Testing
on:
  push:
    branches:
      - main

jobs:
  full_pytest:
    if: github.repository == 'pyg-team/pytorch_geometric'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup packages
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
          torch-version: ${{ matrix.torch-version }}
          torchvision-version: ${{ matrix.torchvision-version }}
      - if: ${{ runner.os == 'Linux' }}
        name: Install graphviz
        run: 'sudo apt-get install graphviz

          '
      - id: measurement-4
        name: Record Measurement After Install graphviz
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install graphviz
          task: get-measurement
      - if: ${{ matrix.torch-version != 'nightly' }}
        name: Install main package (torch!=nightly)
        run: 'echo "torch==${{ matrix.torch-version }}" > requirements-constraint.txt

          uv pip install -e ".[full,test]" --constraint requirements-constraint.txt

          '
        shell: bash
      - id: measurement-6
        name: Record Measurement After Install main package (torch!=nightly)
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install main package (torch!=nightly)
          task: get-measurement
      - if: ${{ matrix.torch-version == 'nightly' }}
        name: Install main package (torch==nightly)
        run: 'uv pip install -e ".[full,test]"

          '
        shell: bash
      - id: measurement-8
        name: Record Measurement After Install main package (torch==nightly)
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install main package (torch==nightly)
          task: get-measurement
      - name: Check installation
        run: 'uv run --no-project python -c "import torch; print(''PyTorch:'', torch.__version__)"

          uv run --no-project python -c "import torch; print(''CUDA available:'',
          torch.cuda.is_available())"

          uv run --no-project python -c "import torch; print(''CUDA:'', torch.version.cuda)"

          '
        shell: bash
      - id: measurement-10
        name: Record Measurement After Check installation
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Check installation
          task: get-measurement
      - name: Run tests
        run: 'FULL_TEST=1 uv run --no-project pytest --cov --cov-report=xml --durations
          10

          '
        shell: bash
        timeout-minutes: 20
      - id: measurement-12
        name: Record Measurement After Run tests
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Run tests
          task: get-measurement
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      fail-fast: false
      matrix:
        exclude:
          - os: macos-14
            torch-version: 1.13.0
          - os: macos-14
            torch-version: 2.0.0
          - os: macos-14
            torch-version: 2.1.0
          - os: macos-14
            torch-version: 2.2.0
        include:
          - torch-version: 1.13.0
            torchvision-version: 0.14.0
          - torch-version: 2.0.0
            torchvision-version: 0.15.0
          - torch-version: 2.1.0
            torchvision-version: 0.16.0
          - torch-version: 2.2.0
            torchvision-version: 0.17.0
          - torch-version: 2.3.0
            torchvision-version: 0.18.0
          - torch-version: 2.4.0
            torchvision-version: 0.19.0
          - torch-version: 2.5.0
            torchvision-version: 0.20.0
          - torch-version: 2.6.0
            torchvision-version: 0.21.0
          - torch-version: nightly
            torchvision-version: nightly
        os:
          - ubuntu-latest
          - windows-latest
          - macos-14
        python-version:
          - '3.9'
        torch-version:
          - 1.13.0
          - 2.0.0
          - 2.1.0
          - 2.2.0
          - 2.3.0
          - 2.4.0
          - 2.5.0
          - 2.6.0
          - 2.7.0
          - nightly
      max-parallel: 10
