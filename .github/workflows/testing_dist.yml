name: Testing distributed PyG
on:
  push:
    branches:
      - main

concurrency:
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ startsWith(github.ref, 'refs/pull/') || github.run_number }}
jobs:
  dist_pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 40
      - id: changed-files-specific
        name: Get changed files
        uses: tj-actions/changed-files@v46
        with:
          files: 'torch_geometric/distributed/**

            test/distributed/**

            '
      - if: steps.changed-files-specific.outputs.any_changed == 'true'
        name: Setup packages
        uses: ./.github/actions/setup
      - if: steps.changed-files-specific.outputs.any_changed == 'true'
        name: Install main package
        run: 'uv pip install -e ".[test]"

          '
      - id: measurement-5
        name: Record Measurement After Install main package
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install main package
          task: get-measurement
      - if: steps.changed-files-specific.outputs.any_changed == 'true'
        name: Check installation
        run: 'uv run --no-project python -c "import torch; print(''PyTorch:'', torch.__version__)"

          uv run --no-project python -c "import torch; print(''CUDA available:'',
          torch.cuda.is_available())"

          uv run --no-project python -c "import torch; print(''CUDA:'', torch.version.cuda)"

          '
        shell: bash
      - id: measurement-7
        name: Record Measurement After Check installation
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Check installation
          task: get-measurement
      - if: steps.changed-files-specific.outputs.any_changed == 'true'
        name: Run tests
        run: 'DIST_TEST=1 uv run --no-project pytest test/distributed --durations
          10

          '
        shell: bash
        timeout-minutes: 10
      - id: measurement-9
        name: Record Measurement After Run tests
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Run tests
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
